name: Squash Commit History

# Trigger the workflow manually
on:
  workflow_dispatch:
    inputs:
      commit_message:
        description: 'Message for the new squashed commit'
        required: true
        default: 'Initial public release'

jobs:
  squash-history:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository with custom RANDOM secret
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.RANDOM }}  # Use custom RANDOM secret for checkout
          fetch-depth: 0  # Fetch full history

      # Step 2: Set up Git configuration and authenticate with RANDOM secret
      - name: Configure Git with Token
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          # Set the remote URL to use the RANDOM secret explicitly
          git remote set-url origin https://x-access-token:${{ secrets.RANDOM }}@github.com/${{ github.repository }}.git

      # Step 3: Squash all commits into one
      - name: Squash History
        run: |
          # Soft reset to the first commit, keeping files
          git reset --soft $(git rev-list --max-parents=0 HEAD)
          # Stage all files
          git add .
          # Commit with the provided message
          git commit -m "${{ github.event.inputs.commit_message }}"

      # Step 4: Force push to the main branch using the RANDOM secret
      - name: Force Push
        run: |
          git push origin main --force
